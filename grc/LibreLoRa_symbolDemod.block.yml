id: LibreLoRa_symbolDemod
label: symbolDemod
category: '[LibreLoRa]'
parameters:
- id: type
  label: Type
  dtype: enum
  options: [float, complex]
  option_attributes:
    fcn: [ff, cc]
  hide: part
- id: SF
  label: Sf
  dtype: raw
- id: symbolSize
  label: Symbolsize
  dtype: raw
- id: implicit
  label: implicit
  dtype: enum
  options: ['True', 'False']
  option_labels: ['Yes', 'No']
- id: windowSize
  label: Windowsize
  dtype: raw
inputs:
- label: in
  domain: stream
  dtype: ${ type }
  vlen: ${ symbolSize }
- domain: message
  id: setSF
  optional: true
outputs:
- label: out
  domain: stream
  dtype: short

templates:
  imports: import LibreLoRa
  make: LibreLoRa.symbolDemod_${type.fcn}(${SF}, ${symbolSize}, ${implicit}, ${windowSize})
  callbacks:
    - setSF(${SF})

cpp_templates:
  includes: ['#include <LibreLoRa/symbolDemod.h>']
  declarations: 'LibreLoRa::symbolDemod_${type.fcn}::sptr ${id};'
  make: 'this->${id} = LibreloRa::symbolDemod_${type.fcn}::make(${SF}, ${symbolSize}, ${implicit}, ${windowSize});'
  
file_format: 1
