/*
 * Copyright 2021 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(correlationSync.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(64c516560174541e423e96484abfe3f8)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <LibreLoRa/correlationSync.h>
// pydoc.h is automatically generated in the build directory
#include <correlationSync_pydoc.h>

template<typename T>
void bind_correlationSync_template(py::module& m, const char* classname)
{

    using correlationSync    = gr::LibreLoRa::correlationSync<T>;


    py::class_<correlationSync,
               gr::block,
               gr::basic_block,
        std::shared_ptr<correlationSync>>(m, classname, D(correlationSync))

        .def(py::init(&correlationSync::make),
           py::arg("corrMin"),
           py::arg("corrStop"),
           py::arg("symbolSize"),
           py::arg("preambleSize"),
           py::arg("SF"),
           py::arg("syncWordNumber"),
           D(correlationSync,make)
        )
        



        ;




}

void bind_correlationSync(py::module& m)
{
  bind_correlationSync_template<float>(m, "correlationSync_ff");
  bind_correlationSync_template<gr_complex>(m, "correlationSync_cc");
}


