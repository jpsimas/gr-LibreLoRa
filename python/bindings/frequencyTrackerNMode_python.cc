/*
 * Copyright 2021 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(frequencyTrackerNMode.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(f2e00d6db214545061261616af86c8d3)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <LibreLoRa/frequencyTrackerNMode.h>
// pydoc.h is automatically generated in the build directory
#include <frequencyTrackerNMode_pydoc.h>

template<typename T>
void bind_frequencyTrackerNMode_template(py::module& m, const char* classname)
{

    using frequencyTrackerNMode    = gr::LibreLoRa::frequencyTrackerNMode<T>;


    py::class_<frequencyTrackerNMode,
	       gr::sync_block,
               gr::block,
               gr::basic_block,
	       std::shared_ptr<frequencyTrackerNMode>>(m, classname, D(frequencyTrackerNMode))

        .def(py::init(&frequencyTrackerNMode::make),
           py::arg("mu"),
           py::arg("SF"),
           py::arg("OSF"),
           py::arg("window"),
           py::arg("nFreqs"),
           D(frequencyTrackerNMode,make)
        )
        



        ;




}

void bind_frequencyTrackerNMode(py::module& m)
{
    bind_frequencyTrackerNMode_template<float>(m, "frequencyTrackerNMode_ff");
    bind_frequencyTrackerNMode_template<gr_complex>(m, "frequencyTrackerNMode_cc");
}




